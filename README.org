#+TITLE: Doom Emacs Config
#+PROPERTY: header-args :tangle config.el

* Table of Contents :toc:
- [[#ui][UI]]
  - [[#setting-the-font][Setting the font]]
  - [[#setting-the-theme][Setting the Theme]]
  - [[#cursor][Cursor]]
- [[#org-mode][Org Mode]]
  - [[#org-folded-state-icon][Org Folded State Icon]]
  - [[#org-directory][Org Directory]]
  - [[#org-bullets][Org Bullets]]
  - [[#org-agenda][Org Agenda]]
- [[#custom-key-bindings][Custom key bindings]]
  - [[#auto-comment-lines][Auto comment lines]]
- [[#dashboard][DASHBOARD]]
  - [[#configuring-dashboard][Configuring Dashboard]]
  - [[#dashboard-in-emacsclient][Dashboard in Emacsclient]]
- [[#modeline][MODELINE]]
  - [[#configuring-modeline][Configuring Modeline]]
- [[#perspective][PERSPECTIVE]]
- [[#rainbow-mode][RAINBOW MODE]]
- [[#emojis][EMOJIS]]

* UI
** Setting the font
Setting the font so emacs is easily readable.
#+begin_src emacs-lisp
(setq doom-font (font-spec :family "Fira Code Retina" :size 20 :weight 'regular)
      doom-variable-pitch-font (font-spec :family "sans" :size 13))
#+end_src

** Setting the Theme
Setting the theme to make emacs cool.
#+begin_src emacs-lisp
(setq doom-theme 'doom-dracula)
#+end_src

** Cursor
Cursor is the most important feature when coding. So i made to be a box all the time. Also changed cursor color to the gruber cursor color.
#+begin_src emacs-lisp
(set-cursor-color "#ffdd33")
(evil-set-cursor-color "#ffdd33")
(setq +evil--default-cursor-color "#ffdd33")
(setq +evil--emacs-cursor-color "#ffdd33")
(custom-set-faces '(cursor ((t (:background "#ffdd33")))))
(setq evil-motion-state-cursor 'box)  ; █
(setq evil-visual-state-cursor 'box)  ; █
(setq evil-normal-state-cursor 'box)  ; █
(setq evil-insert-state-cursor 'box)  ; █
(setq evil-emacs-state-cursor  'hbar) ; _
#+end_src

* Org Mode
Settings for Org Mode
#+begin_src emacs-lisp
(map! :leader
      :desc "Org babel tangle" "m B" #'org-babel-tangle)
#+end_src

** Org Folded State Icon
This sets the icon to display when the org headings are in a folded state.
#+begin_src emacs-lisp
(setq org-ellipsis " ▼ ")
#+end_src
** Org Directory
Location to my Org files directory.
#+begin_src emacs-lisp
(setq org-directory "~/Desktop/Org/")
#+end_src
** Org Bullets
Enabling org bullets and setting custom font size for all of them.
#+begin_src emacs-lisp
(add-hook 'org-mode-hook #'org-bullets-mode)
(setq inhibit-compacting-font-caches t)
(custom-set-faces
  '(org-level-1 ((t (:inherit outline-1 :height 1.4))))
  '(org-level-2 ((t (:inherit outline-2 :height 1.3))))
  '(org-level-3 ((t (:inherit outline-3 :height 1.2))))
  '(org-level-4 ((t (:inherit outline-4 :height 1.1))))
  '(org-level-5 ((t (:inherit outline-5 :height 1.0))))
)
#+end_src

** Org Agenda
*** Agenda Files
The Location to my Agenda Org files.
#+begin_src emacs-lisp
(setq org-agenda-files
      '("~/Desktop/Org/Agenda/Tasks.org"
        "~/Desktop/Org/Agenda/Urgent.org"
        "~/Desktop/Org/Agenda/Events.org"))
#+end_src
*** Agenda Log
This setting makes Agenda more detaied.
#+begin_src emacs-lisp
(setq org-agenda-start-with-log-mode t)
(setq org-log-done 'time)
(setq org-log-into-drawer t)
#+end_src

* Custom key bindings
Some of the keybindings of doom emacs do not suit my taste so i set a few custom ones.
** Auto comment lines
Comment and uncommenting lines is one of the most used features so I set it to a easily accesible binding.
#+begin_src emacs-lisp
(map!
 :leader
 :desc "Comment line"
 "TAB TAB" #'comment-line)
#+end_src
    
* DASHBOARD
Emacs Dashboard is an extensible startup screen showing you recent files, bookmarks, agenda items and an Emacs banner.

** Configuring Dashboard
#+begin_src emacs-lisp
(use-package dashboard
  :init      ;; tweak dashboard config before loading it
  (setq dashboard-set-heading-icons t)
  (setq dashboard-set-file-icons t)
  ;;(setq dashboard-startup-banner 'logo) ;; use standard emacs logo as banner
  (setq dashboard-startup-banner "~/.doom.d/doom-emacs-dash.png")  ;; use custom image as banner
  (setq dashboard-center-content nil) ;; set to 't' for centered content
  (setq dashboard-items '((recents . 5)
                          (agenda . 5 )
                          (bookmarks . 5)
                          (projects . 5)))
  :config
  (dashboard-setup-startup-hook)
  (dashboard-modify-heading-icons '((recents . "file-text")
                                    (bookmarks . "book"))))
#+end_src

** Dashboard in Emacsclient
This setting ensures that emacsclient always opens on *dashboard* rather than *scratch*. doesn't work at the moment.
#+begin_src emacs-lisp
(setq doom-fallback-buffer "*dashboard*")
#+end_src

* MODELINE
The modeline is the bottom status bar that appears in Emacs windows.  For more information on what is available to configure in the Doom modeline, check out:
https://github.com/seagle0128/doom-modeline

** Configuring Modeline
Setting custom font, height and width of the bar in the right side of the modeline.
#+begin_src emacs-lisp
(set-face-attribute 'mode-line nil :font "Ubuntu Mono-14")
(setq doom-modeline-height 30     ;; sets modeline height
      doom-modeline-bar-width 3)  ;; sets right bar width
#+end_src

* PERSPECTIVE
Perspective provides multiple named workspaces (or "perspectives") in Emacs, similar to having multiple desktops in window managers like Awesome and XMonad.  Each perspective has its own buffer list and its own window layout, making it easy to work on many separate projects without getting lost in all the buffers.  Switching to a perspective activates its window configuration, and when in a perspective, only its buffers are available (by default).  Doom Emacs uses 'SPC some_key' for binding some of the perspective commands, so I used this binging format for the perspective bindings that I created..

#+begin_src emacs-lisp
(map! :leader
      :desc "Switch to perspective NAME" "DEL" #'persp-switch
      :desc "Switch to buffer in perspective" "," #'persp-switch-to-buffer
      :desc "Switch to next perspective" "]" #'persp-next
      :desc "Switch to previous perspective" "[" #'persp-prev
      :desc "Add a buffer current perspective" "+" #'persp-add-buffer
      :desc "Remove perspective by name" "-" #'persp-remove-by-name)
#+end_src

* RAINBOW MODE
Rainbox mode displays the actual color for any hex value color.  It's such a nice feature that I wanted it turned on all the time, regardless of what mode I am in.  The following creates a global minor mode for rainbow-mode and enables it.

#+begin_src emacs-lisp
(define-globalized-minor-mode global-rainbow-mode rainbow-mode
  (lambda () (rainbow-mode 1)))
(global-rainbow-mode 1 )
#+end_src

* EMOJIS
Emojify is an Emacs extension to display emojis. It can display github style emojis like :smile: or plain ascii ones like :).
#+begin_src emacs-lisp
(use-package emojify
  :hook (after-init . global-emojify-mode))
#+end_src
